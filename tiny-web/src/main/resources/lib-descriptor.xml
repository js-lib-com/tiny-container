<?xml version="1.0" encoding="UTF-8"?>
<config>
	<managed-classes>
		<!-- App should be declared first to be initialized before the other managed classes with managed life cycle. -->
		<app class="js.tiny.container.core.App" />
		<app-context interface="js.tiny.container.core.AppContext" class="js.tiny.container.servlet.TinyContainer" />
		<observer class="js.tiny.container.Observer" />

		<request-context class="js.tiny.container.servlet.RequestContext" scope="THREAD" />

		<transaction-manager interface="js.transaction.TransactionManager" type="SERVICE" />
		<data-source class="js.tiny.container.TransactionalResourceImpl">
			<interface name="js.tiny.container.TransactionalResource" />
		</data-source>

		<!--<views interface="js.tiny.container.mvc.ViewManager" class="js.tiny.container.mvc.ViewManagerImpl" />-->
		<!--<captcha class="js.tiny.container.http.captcha.Captcha" />-->

		<event-stream-manager class="js.tiny.container.net.EventStreamManagerImpl">
			<interface name="js.tiny.container.net.EventStreamManager" />
			<interface name="js.tiny.container.net.EventStreamManagerSPI" />
		</event-stream-manager>
		<event-stream class="js.tiny.container.net.EventStream" scope="LOCAL" />

		<json interface="js.json.Json" type="SERVICE" />
		<template-engine interface="js.template.TemplateEngine" type="SERVICE" />
	</managed-classes>
</config>